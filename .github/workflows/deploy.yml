name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: hop-rank

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.7.0

      - name: Use pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_BASE_URL: ${{vars.BASE_URL}}
          envkey_SESSION_SECRET: ${{secrets.SESSION_SECRET}}

          envkey_DATABASE_PATH: ${{vars.DATABASE_PATH}}
          envkey_MIGRATIONS_PATH: ${{vars.MIGRATIONS_PATH}}

          envkey_FB_OAUTH_CLIENT_ID: ${{vars.FB_OAUTH_CLIENT_ID}}
          envkey_FB_OAUTH_CLIENT_SECRET: ${{secrets.FB_OAUTH_CLIENT_SECRET}}
          envkey_FB_OAUTH_AUTH_ENDPOINT: ${{vars.FB_OAUTH_AUTH_ENDPOINT}}
          envkey_FB_OAUTH_TOKEN_ENDPOINT: ${{vars.FB_OAUTH_TOKEN_ENDPOINT}}
          envkey_FB_OAUTH_USERINFO_ENDPOINT: ${{vars.FB_OAUTH_USERINFO_ENDPOINT}}

          envkey_VITE_ALGOLIA_APP_ID: ${{vars.VITE_ALGOLIA_APP_ID}}
          envkey_VITE_ALGOLIA_API_KEY: ${{vars.VITE_ALGOLIA_API_KEY}}

      - name: Set pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install node modules
        run: pnpm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/kostecki/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/kostecki/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Bypass Cloudflare for GitHub Action
        uses: xiaotianxt/bypass-cloudflare-for-github-action@v1.1.1
        with:
          cf_zone_id: ${{ secrets.CF_ZONE_ID }}
          cf_api_token: ${{ secrets.CF_API_TOKEN }}

      # - name: Ping Portainer
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: ${{ secrets.PORTAINER_WEBHOOK }}
      #     method: "POST"
      #     timeout: 15000
      #     retry: 3
